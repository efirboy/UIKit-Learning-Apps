//
//  UserViewController.swift
//  UITableView and UICollectionView (Instagram)
//
//  Created by Alexandr Garkalin on 13.11.2024.
//

import UIKit

final class UserViewController: UIViewController {
    
    // –ù–∏–∫–Ω–µ–π–º —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
    var nickname: String?
   
    //MARK: - –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–µ–ª–∏
    private var messiInfo: UserInfo = {
        var messiElement = UserInfo()
        messiElement.imageName = "Messi"
        messiElement.username = "Leo Messi"
        messiElement.proffesion = "–°–ø–æ—Ä—Ç—Å–º–µ–Ω"
        messiElement.bio = "Bienvenidos a la cuenta oficial de Instagram de Leo Messi / Welcome to the official Leo Messi Instagram account"
        messiElement.location = "Miami, Florida"
        messiElement.subscribers = "neymarjr"
        messiElement.countPublications = "1286 –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
        messiElement.countSubscribers = "504 –º–ª–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
        messiElement.countSubscriptions = "326 –ø–æ–¥–ø–∏—Å–∫–∏"
        return messiElement
    }()
    
    private var mbappeInfo: UserInfo = {
        var mbappeElement = UserInfo()
        mbappeElement.imageName = "Mbappe"
        mbappeElement.username = "Kylian Mbapp√©"
        mbappeElement.proffesion = "–°–ø–æ—Ä—Ç—Å–º–µ–Ω"
        mbappeElement.bio = "Official account of Kylian Mbapp√© ‚ö° World Champion üåç Forward for Real Madrid & French National Team üá´üá∑"
        mbappeElement.location = "Madrid, Spain"
        mbappeElement.subscribers = "neymarjr"
        mbappeElement.countPublications = "1345 –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
        mbappeElement.countSubscribers = "122 –º–ª–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
        mbappeElement.countSubscriptions = "452 –ø–æ–¥–ø–∏—Å–∫–∏"
        return mbappeElement
    }()
    
    private var neymarInfo: UserInfo = {
        var neymarElement = UserInfo()
        neymarElement.imageName = "Neymar"
        neymarElement.username = "Neymar Jr"
        neymarElement.proffesion = "–°–ø–æ—Ä—Ç—Å–º–µ–Ω"
        neymarElement.bio = "Just a man from Brazil living the dream ‚öΩÔ∏è Forward for Al Hilal and the Sele√ß√£o. Welcome to my official account! üôå"
        neymarElement.location = "El Riyadh, Saudi Arabia"
        neymarElement.subscribers = "leomessi"
        neymarElement.countPublications = "5707 –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
        neymarElement.countSubscribers = "226 –º–ª–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
        neymarElement.countSubscriptions = "1817 –ø–æ–¥–ø–∏—Å–∫–∏"
        return neymarElement
    }()
    
    
    //MARK: - –û–±—ä–µ–∫—Ç—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    private var myTableView = UITableView()
    private var refreshControl = UIRefreshControl()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white

        // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–æ–≤
        setupNavigationControllerItems()
        setupTableView()
    }
    
    //MARK: - –ú–µ—Ç–æ–¥—ã
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    private func setupNavigationControllerItems() {
        navigationController?.navigationBar.tintColor = .black
        // –¥–æ–±–∞–≤—è–ª–µ–º –ø—Ä–∞–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (—Ç—Ä–∏ —Ç–æ—á–∫–∏)
        let rightButton = UIButton()
        rightButton.setImage(UIImage(systemName: "ellipsis"), for: .normal)
        navigationItem.rightBarButtonItem = UIBarButtonItem(customView: rightButton)
        // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–Ω –ø–æ —Ü–µ–Ω—Ç—Ä—É
        let userLabel = UILabel()
        userLabel.text = nickname
        userLabel.textAlignment = .center
        userLabel.font = UIFont.systemFont(ofSize: 14, weight: .bold)
        navigationItem.titleView = userLabel
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏ refreshControl
    private func setupTableView() {
        myTableView = UITableView(frame: view.bounds, style: .plain)
        myTableView.register(InfoUserTableViewCell.self, forCellReuseIdentifier: "InfoUserTableViewCell") // —è—á–µ–π–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        myTableView.register(HighlightsTableViewCell.self, forCellReuseIdentifier: "HighlightsTableViewCell") // —è—á–µ–π–∫–∞ —Å–µ–∫—Ü–∏–∏ "–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ" (—Ö–∞–π–ª–∞–π—Ç—ã)
        myTableView.register(MediaTableViewCell.self, forCellReuseIdentifier: "MediaTableViewCell") // —è—á–µ–π–∫–∞ –ª–µ–Ω—Ç—ã (–∫–æ–ª–ª–µ–∫—Ü–∏–∏) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        myTableView.separatorStyle = .none
        myTableView.showsVerticalScrollIndicator = false
        myTableView.delegate = self
        myTableView.dataSource = self
        myTableView.refreshControl = refreshControl
        refreshControl.addTarget(self, action: #selector(refreshData), for: .valueChanged)
        view.addSubview(myTableView)
    }
    
    @objc private func refreshData() {
        refreshControl.endRefreshing() // –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    }
}

//MARK: UITableView Data Source
extension UserViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 3
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.row == 0 { // —è—á–µ–π–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            let cell = tableView.dequeueReusableCell(withIdentifier: "InfoUserTableViewCell", for: indexPath) as! InfoUserTableViewCell
            switch nickname {
            case "leomessi": cell.element = messiInfo
            case "k.mbappe": cell.element = mbappeInfo
            case "neymarjr": cell.element = neymarInfo
            default: break
            }
            cell.delegate = self
            cell.delegateSubscriber = self
            return cell
        } else if indexPath.row == 1 { // —è—á–µ–π–∫–∞ —Å–µ–∫—Ü–∏–∏ "–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ" (—Ö–∞–π–ª–∞–π—Ç—ã)
            let cell = tableView.dequeueReusableCell(withIdentifier: "HighlightsTableViewCell", for: indexPath) as! HighlightsTableViewCell
            cell.nickname = nickname
            cell.delegate = self
            return cell
        } else { // —è—á–µ–π–∫–∞ –ª–µ–Ω—Ç—ã (–∫–æ–ª–ª–µ–∫—Ü–∏–∏) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            let cell = tableView.dequeueReusableCell(withIdentifier: "MediaTableViewCell", for: indexPath) as! MediaTableViewCell
            cell.nickname = nickname
            cell.delegate = self
            return cell
        }
    }
}

//MARK: UITableView Delegate
extension UserViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if indexPath.row == 0 {
            return 320 // –≤—ã—Å–æ—Ç–∞ —è—á–µ–π–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        } else if indexPath.row == 1 {
            return 100 // –≤—ã—Å–æ—Ç–∞ —è—á–µ–π–∫–∏ —Å–µ–∫—Ü–∏–∏ "–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ" (—Ö–∞–π–ª–∞–π—Ç—ã)
        } else {
            return 700 // –≤—ã—Å–æ—Ç–∞ —è—á–µ–π–∫–∏ —Å –∫–æ–ª–ª–µ–∫–∏–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        }
    }
    
    // –ó–∞–ø—Ä–µ—â–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —è—á–µ–µ–∫ —Ç–∞–±–ª–∏—Ü—ã
    func tableView(_ tableView: UITableView, shouldHighlightRowAt indexPath: IndexPath) -> Bool {
        return false
    }
}


//MARK: - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ StorysViewCellDelegate (–¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç–æ—Ä–∏—Å)
extension UserViewController: StorysViewCellDelegate {
    func didTapStorys(in cell: UITableViewCell) {
        let storysVC = StorysViewController()
        storysVC.nickname = nickname
        storysVC.modalPresentationStyle = .fullScreen
        storysVC.modalTransitionStyle = .crossDissolve
        present(storysVC, animated: true)
    }
}

//MARK: - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ HighlightsTableViewCellDelegate (–¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç–æ—Ä–∏—Å –∏–∑ "–ê–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ")
extension UserViewController: HighlightsTableViewCellDelegate {
    func didSelectItemAt(in cell: UITableViewCell, index: Int) {
        let storysVC = StorysViewController()
        storysVC.nickname = nickname
        storysVC.selectedHighlightIndex = index
        storysVC.modalPresentationStyle = .fullScreen
        storysVC.modalTransitionStyle = .crossDissolve
        present(storysVC, animated: true)
    }
}

//MARK: - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ MediaCellDelegate (–¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏)
extension UserViewController: MediaCellDelegate {
    func didTapCollectionItem(at indexPath: IndexPath, in tableCell: UITableViewCell, didSelectPhoto photo: MediaPost) {
        let postVC = PostViewController()
        postVC.modalPresentationStyle = .fullScreen
        postVC.modalTransitionStyle = .crossDissolve
        postVC.nickname = nickname
        postVC.mediaPost = photo
        present(postVC, animated: true)
    }
}

//MARK: - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ UserViewControllerDelegate (–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏ –ª—é–±–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É)
extension UserViewController: UserViewControllerDelegate {
    func didTapSubscriber(subscriber: String) {
        let userVC = UserViewController()
        userVC.nickname = subscriber
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π TabBarController
        if let tabBarController = self.tabBarController,
           let navigationController = tabBarController.viewControllers?.first(where: { $0 is UINavigationController }) as? UINavigationController {
            navigationController.setViewControllers([navigationController.viewControllers.first!, userVC], animated: true)
        }
    }
}







